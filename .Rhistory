count_in_location <- function(Location){
num_location_df <- str_detect(unlist(locations), Location)
num_Location <- sum(num_location_df == TRUE)
ans <- sprintf("There were %s protests in %s.", num_Location, Location)
return(ans)
}
# Use your function above to describe the number of protests in "Washington, DC"
# `dc_summary`
dc_summary <- count_in_location("Washington, DC")
print(dc_summary)
# Use your function above to describe the number of protests in "Minneapolis"
# `minneapolis_summary`
minneapolis_summary <- count_in_location("Minneapolis")
print(minneapolis_summary)
# Create a new vector `states` which is the last two characters of each
# value in the `locations` vector. Hint, you may want to again use the
# `stringr` package
states <- str_sub(locations$Location, -2, -1)
# Create a vector of the unique states in your dataset. `uniq_states`
uniq_states <- c(unique(states))
# Create a summary sentence for each state by passing your `uniq_states`
# variable and `count_in_location` variables to the `sapply()` function.
# Store your results in `state_summary`
# (don't miss how amazing this is! Very powerful to apply your function to an
# entire vector *at once* with `sapply()`)
state_summary <- sapply(uniq_states, count_in_location)
# Create a summary table by passing your `states` variable to the `table()`
# funciton, and storing the result in a variable `state_table`.
state_table <- table(states)
# Optional: use the View() function to more easily read the table
View(state_table)
# Reflection: Looking at the `state_table` variable, what data quality issues
# do you notice, and how would you use that to change your analysis (no need
# to actually change your analysis)?
# What was the maximum number of protests in a state? `max_in_state`
# (hint: use your `state_table` variable)
max_in_state <- max(state_table)
# Part 4: Dates -----------------------------------------------------------
# In this section, you're exploring *when* protests happened.
# Extract the `Date` column into a variable called `dates` by passing the
# column to the `as.Date()` function (this will process the values as dates,
# which are *luckily* already in an optimal format for parsing)
dates <- as.Date(protests$Date)
# What is the most recent date in the dataset? `most_recent`
most_recent <- max(dates)
# What is the earliest date in the dataset? `earliest`
earliest <- min(dates)
# What is the length of the timespan of the dataset? `time_span`
# hint: R can do math with dates pretty well by default!
time_span <- most_recent - earliest
# Create a vector of the dates that are in 2020 `in_2020`
in_2020 <- c(subset(dates, dates > as.Date("2019-12-31")))
in_2020 <- c(subset(in_2020, in_2020 < as.Date("2021-01-01")))
print(in_2020)
# Create a vector of the dates that are in 2019. `in_2019`
in_2019 <- c(subset(dates, dates > as.Date("2018-12-31")))
in_2019 <- c(subset(in_2019, in_2019 < as.Date("2020-01-01")))
print(in_2019)
# What is the ratio of the number of protests in 2020 comparted to 2019?
# `ratio_2020_2019`
ratio_2020_2019 <- length(in_2020) / length(in_2019)
print(ratio_2020_2019)
# Reflection: Does the change in the number of protests from 2019 to 2020
# surprise you? Why or why not?
# Write a function `count_on_date()` that accecpts as a parameter a `date`,
# and returns the sentence:
# "There were N protests on DATE.", where N is the number of protests on that
# date, and DATE is the date provided
count_on_date <- function(Dates) {
dates_df <- str_detect(unlist(dates), Dates)
Date_protest <- sum(dates_df == TRUE)
count_date <- sprintf("There were %s protests on %s.", Date_protest, Dates)
return(count_date)
}
# Using your function you just wrote, how many protests were there on
# May 24th, 2020? `num_may_24`
num_may_24 <- count_on_date("2020-05-24")
print(num_may_24)
# Using your function you just wrote, how many protests were there on
# May 31th, 2020? `num_on_may_31`
num_on_may_31 <- count_on_date("2020-05-31")
print(num_on_may_31)
# For more on this timeline, see:
# https://www.nytimes.com/article/george-floyd-protests-timeline.html
# How many protests occured each month in 2020? `by_month_table`
# Hint: use the `months()` function, your `in_2020` dates, and the `table()`
# Function. If you like, you can do this in multiple different steps.
by_month_table <- table(months(in_2020))
# As a comparison, let's assess the change between July 2019 and July 2020.
# What is the *difference* in the number of protests between July 2020 and
# July 2019? You'll want to do this in multiple steps as you see fit, though
# your answer should be stored in the variable `change_july_protests`.
by_month_table <- table(months(in_2020))
July2020 <- by_month_table[5]
by_month_table_2019 <- table(months(in_2019))
July2019 <- by_month_table_2019[5]
change_july_protests <- July2020 - July2019
print(change_july_protests)
# Reflection: do a bit of research. Find at least *two specific policies* that
# have been changed as a result of protests in 2020. These may be at the
# city, state, or University level. Please provide a basic summary, as well as a
# link to each article.
# Part 5: Protest Purpose -------------------------------------------------
# In this section, you're exploring *why* protests happened
# Extract the `Event..legacy..see.tags.` column into a variable called `purpose`
purpose <- select(protests, Event..legacy..see.tags.)
# How many different purposes are listed in the dataset? `num_purposes`
num_purposes <- c(unique(purpose))
# That's quite a few -- if you look at -- View() -- the vector, you'll notice
# a common pattern for each purpose. It's listed as:
# SOME_PURPOSE (additiona_detail)
# To get a higher level summary, create a variable `high_level_purpse` by
# extracting *everything before the first parenthesis* in each value
# in the vector. For example, from "Civil Rights (Black Women's March)"
# you would extract "Civil Rights". You'll also have to *remove the space*
# before the first parenthasis.
# Hint: this will take a little bit of googling // trial and error. Be patient!
View(num_purposes)
purposes <- gsub("\\(.*\\)", "", num_purposes$Event..legacy..see.tags.)
high_level_purpse <- str_squish(purposes)
high_level_purpse
# How many "high level" purposes have you identified? `num_high_level`
num_high_level <- length(high_level_purpse)
# Create a table that counts the number of protests for each high level purpose
# `high_level_table`
high_level_table <- table(high_level_purpse)
# Reflection: Take a look (`View()`) your `high_level_table` variable. What
# picture does this paint of the U.S.?
View(high_level_table)
# Part 6: Independent Exploration -----------------------------------------
# As a last step, you should write your own function that allows you to
# quickly ask questions of the dataset. For example, in the above sections,
# you wrote functions to ask the same question about different months, or
# locations. If you need any guidance here, feel free to ask!
count_on_purpose<- function(Purposes) {
purposes_df <- str_detect(unlist(purpose), Purposes)
purposes_protest <- sum(purposes_df == TRUE)
PurposeS <- sprintf("There were %s protests because of %s.", purposes_protest,
Purposes)
return(PurposeS)
}
shiny::runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
source("./Exploratory Data Analysis/Summary information.R")
source("Summary information.R")
source("Table of summary information.R")
source("Summary information.R")
source("Table of summary information.R")
source("Chart_1.R")
source("Chart_2.R")
source("Chart_3.R")
Chart_2.R
source(Chart_2.R)
summary_info <- list()
summary_info$max_CO2_year <- max_CO2_year
summary_info$min_CH4_year <- min_CH4_year
summary_info$min_max_N2O <- min_max_N2O
summary_info$old_recent_cfc11 <- old_recent_cfc11
summary_info$higher_temp <- higher_temp
df <- new_climate_df
colnames(df) <- c("Year", "CO2", "CH4", "N2O", "CFC.11", "CFC.12", "Temp")
kable(df)
Chart_2.R
a
p
b
p
c
df <- new_climate_df
colnames(df) <- c("Year", "CO2", "CH4", "N2O", "CFC.11", "CFC.12", "Temp")
kable(df)
df <- new_climate_df
df <- new_climate_df
View(df)
df <- new_climate_df
df
pop_2018_1998_df <- filter(AL_Autauga_df , year == 2018 | year == 1998)
selected <- pop_2018_1998_df %>% select(year, aapi_pop_15to64, black_pop_15to64,
latinx_pop_15to64, native_pop_15to64,
white_pop_15to64)
df <- melt(selected, id.vars="year")
plotb <- ggplot(df, aes(x=year, y=value, fill=variable))+
geom_bar(position = "dodge", stat = "identity")
library(dplyr)
library(ggplot2)
library(shiny)
library(fmsb)
library(reshape2)
#load data
incarceration_df <- read.csv("incarceration_trends.csv")
AL_df <- filter(incarceration_df, state == "AL")
AL_filter_df <- filter(AL_df, county_name == "Autauga County" |
county_name == "Barbour County"|
county_name == "Bibb County" |
county_name == "Blount County" |
county_name == "Bullock County")
AL_Autauga_df <- filter(AL_df, county_name == "Autauga County")
pop_2018_1998_df <- filter(AL_Autauga_df , year == 2018 | year == 1998)
AL_2018_df <- filter(AL_df , year == 2018)
total_pop_Autauga_2018 <- filter(AL_Autauga_df, year == 2018)
total_pop_Autauga_1970 <- filter(AL_Autauga_df, year == 1970)
#summary information
#1.The max total_pop of Autauga County in AL and the year it happened
AL_Autauga_df <- filter(AL_df, county_name == "Autauga County")
max_pop <- max(AL_Autauga_df$total_pop)
max_pop_df <- filter(AL_Autauga_df, AL_Autauga_df$total_pop == max_pop)
max_pop_year <- select(max_pop_df, year, total_pop)
#2.The min total_pop of Autauga County in AL and the year it happened
AL_Autauga_df <- filter(AL_df, county_name == "Autauga County")
min_pop <- min(AL_Autauga_df$total_pop)
min_pop_df <- filter(AL_Autauga_df, AL_Autauga_df$total_pop == min_pop)
min_pop_year <- select(min_pop_df, year, total_pop)
#3. The mean of female_pop and the mean of male_pop in AL
AL_df <- filter(incarceration_df, state == "AL")
mean_female_15to64 <- mean(AL_df$female_pop_15to64)
mean_male_15to64 <- mean(AL_df$male_pop_15to64)
#4.which county in AL has the most total_pop in the year 2018.
AL_2018_df <- filter(AL_df , year == 2018)
max_2018_pop <- max(AL_2018_df$total_pop)
max_2018_pop_df <- filter(AL_2018_df, AL_2018_df$total_pop == max_2018_pop)
max_pop_county <- select(max_2018_pop_df, total_pop, county_name)
#5. The difference between total_pop in 1970 and 2018 of Autauga County in AL.
total_pop_Autauga_2018 <- filter(AL_Autauga_df, year == 2018)
total_pop_Autauga_1970 <- filter(AL_Autauga_df, year == 1970)
difference <- total_pop_Autauga_2018$total_pop - total_pop_Autauga_1970$total_pop
#plot 1
plota <- ggplot(AL_filter_df , aes(x = year,y = total_pop, color = county_name)) +
geom_line() +
ggtitle("Total population trends")
setwd("~/Desktop/a3/incarceration-trends")
library(dplyr)
library(ggplot2)
library(shiny)
library(fmsb)
library(reshape2)
#load data
incarceration_df <- read.csv("incarceration_trends.csv")
AL_df <- filter(incarceration_df, state == "AL")
AL_filter_df <- filter(AL_df, county_name == "Autauga County" |
county_name == "Barbour County"|
county_name == "Bibb County" |
county_name == "Blount County" |
county_name == "Bullock County")
AL_Autauga_df <- filter(AL_df, county_name == "Autauga County")
pop_2018_1998_df <- filter(AL_Autauga_df , year == 2018 | year == 1998)
AL_2018_df <- filter(AL_df , year == 2018)
total_pop_Autauga_2018 <- filter(AL_Autauga_df, year == 2018)
total_pop_Autauga_1970 <- filter(AL_Autauga_df, year == 1970)
#summary information
#1.The max total_pop of Autauga County in AL and the year it happened
AL_Autauga_df <- filter(AL_df, county_name == "Autauga County")
max_pop <- max(AL_Autauga_df$total_pop)
max_pop_df <- filter(AL_Autauga_df, AL_Autauga_df$total_pop == max_pop)
max_pop_year <- select(max_pop_df, year, total_pop)
#2.The min total_pop of Autauga County in AL and the year it happened
AL_Autauga_df <- filter(AL_df, county_name == "Autauga County")
min_pop <- min(AL_Autauga_df$total_pop)
min_pop_df <- filter(AL_Autauga_df, AL_Autauga_df$total_pop == min_pop)
min_pop_year <- select(min_pop_df, year, total_pop)
#3. The mean of female_pop and the mean of male_pop in AL
AL_df <- filter(incarceration_df, state == "AL")
mean_female_15to64 <- mean(AL_df$female_pop_15to64)
mean_male_15to64 <- mean(AL_df$male_pop_15to64)
#4.which county in AL has the most total_pop in the year 2018.
AL_2018_df <- filter(AL_df , year == 2018)
max_2018_pop <- max(AL_2018_df$total_pop)
max_2018_pop_df <- filter(AL_2018_df, AL_2018_df$total_pop == max_2018_pop)
max_pop_county <- select(max_2018_pop_df, total_pop, county_name)
#5. The difference between total_pop in 1970 and 2018 of Autauga County in AL.
total_pop_Autauga_2018 <- filter(AL_Autauga_df, year == 2018)
total_pop_Autauga_1970 <- filter(AL_Autauga_df, year == 1970)
difference <- total_pop_Autauga_2018$total_pop - total_pop_Autauga_1970$total_pop
#plot 1
plota <- ggplot(AL_filter_df , aes(x = year,y = total_pop, color = county_name)) +
geom_line() +
ggtitle("Total population trends")
pop_2018_1998_df <- filter(AL_Autauga_df , year == 2018 | year == 1998)
selected <- pop_2018_1998_df %>% select(year, aapi_pop_15to64, black_pop_15to64,
latinx_pop_15to64, native_pop_15to64,
white_pop_15to64)
df <- melt(selected, id.vars="year")
plotb <- ggplot(df, aes(x=year, y=value, fill=variable))+
geom_bar(position = "dodge", stat = "identity")
plota <- ggplot(AL_filter_df , aes(x = year,y = total_pop, color = county_name)) +
geom_line() +
ggtitle("Total population trends")
View(plota)
View(plotb)
View(plotb)
ggplot(AL_filter_df , aes(x = year,y = total_pop, color = county_name)) +
geom_line() +
ggtitle("Total population trends")
pop_2018_1998_df <- filter(AL_Autauga_df , year == 2018 | year == 1998)
selected <- pop_2018_1998_df %>% select(year, aapi_pop_15to64, black_pop_15to64,
latinx_pop_15to64, native_pop_15to64,
white_pop_15to64)
df <- melt(selected, id.vars="year")
ggplot(df, aes(x=year, y=value, fill=variable))+
geom_bar(position = "dodge", stat = "identity")
View(min_year_df)
View(incarceration_df)
pop_2018_1998_df <- filter(AL_Autauga_df , year == 2018 | year == 1998)
selected <- pop_2018_1998_df %>% select(year, aapi_jail_pop, black_jail_pop,
latinx_jail_pop, native_jail_pop,
white_jail_pop)
df <- melt(selected, id.vars="year")
ggplot(df, aes(x=year, y=value, fill=variable))+
geom_bar(position = "dodge", stat = "identity") +
ggtitle("")
ggplot(AL_filter_df , aes(x = year,y = total_jail_pop, color = county_name)) +
geom_line() +
ggtitle("Total population trends")
library(usmap)
library(ggmap)
incarceration_2018_df <- filter(incarceration_df, year = 2018)
incarceration_2018_df <- filter(incarceration_df, year == 2018)
incarceration_2018_df <- filter(incarceration_df, year == 2018)
incarceration_df <- read.csv("incarceration_trends.csv")
incarceration_2018_df <- filter(incarceration_df, year == 2018)
plot_usmap(data = incarceration_2018_df, values = "", color = orange,
labels = FALSE) + scale_fill_continuous( low = "white", high = orange,
name = "population", label = scales::comma)+
theme(legend.position = "right") +
theme(panel.background = element_rect(colour = "black")) +
labs(title = "Population of jail in 2018 by State")
incarceration_df <- read.csv("incarceration_trends.csv")
incarceration_2018_df <- filter(incarceration_df, year == 2018)
plot_usmap(data = incarceration_2018_df, values = "", color = green,
labels = FALSE) + scale_fill_continuous( low = "white", high = orange,
name = "population", label = scales::comma)+
theme(legend.position = "right") +
theme(panel.background = element_rect(colour = "black")) +
labs(title = "Population of jail in 2018 by State")
incarceration_df <- read.csv("incarceration_trends.csv")
incarceration_2018_df <- filter(incarceration_df, year == 2018)
plot_usmap(data = incarceration_2018_df, values = "total_jail_pop", color = green,
labels = FALSE) + scale_fill_continuous( low = "white", high = orange,
name = "population", label = scales::comma)+
theme(legend.position = "right") +
theme(panel.background = element_rect(colour = "black")) +
labs(title = "Population of jail in 2018 by State")
incarceration_df <- read.csv("incarceration_trends.csv")
incarceration_2018_df <- filter(incarceration_df, year == 2018)
plot_usmap(data = incarceration_2018_df, values = "total_jail_pop", labels = FALSE) +
scale_fill_continuous( low = "white", high = orange,
name = "population", label = scales::comma)+
theme(legend.position = "right") +
theme(panel.background = element_rect(colour = "black")) +
labs(title = "Population of jail in 2018 by State")
plot_usmap(data = incarceration_2018_df, values = "total_jail_pop", color = red,
labels = FALSE) +
scale_fill_continuous( low = "white", high = red,
name = "population", label = scales::comma)+
theme(legend.position = "right") +
theme(panel.background = element_rect(colour = "black")) +
labs(title = "Population of jail in 2018 by State")
plot_usmap(data = incarceration_2018_df, values = "total_jail_pop", color = "red",
labels = FALSE) +
scale_fill_continuous( low = "white", high = "red",
name = "population", label = scales::comma)+
theme(legend.position = "right") +
theme(panel.background = element_rect(colour = "black")) +
labs(title = "Population of jail in 2018 by State")
incarceration_df <- read.csv("incarceration_trends.csv")
incarceration_2018_df <- filter(incarceration_df, year == 2018)
plot_usmap(data = incarceration_2018_df, values = "total_jail_pop", color = "orange",
labels = FALSE) +
scale_fill_continuous( low = "white", high = "orange",
name = "population", label = scales::comma)+
theme(legend.position = "right") +
theme(panel.background = element_rect(colour = "black")) +
labs(title = "Population of jail in 2018 by State")
incarceration_df <- read.csv("incarceration_trends.csv")
incarceration_2018_df <- filter(incarceration_df, year == 2018)
plot_usmap(data = incarceration_2018_df, values = "total_jail_pop", color = "green",
labels = FALSE) +
scale_fill_continuous( low = "white", high = "green",
name = "population", label = scales::comma)+
theme(legend.position = "right") +
theme(panel.background = element_rect(colour = "black")) +
labs(title = "Population of jail in 2018 by State")
incarceration_df <- read.csv("incarceration_trends.csv")
incarceration_2018_df <- filter(incarceration_df, year == 2018)
plot_usmap(data = incarceration_2018_df, values = "total_jail_pop", color = "orange",
labels = FALSE) +
scale_fill_continuous( low = "white", high = "orange",
name = "population", label = scales::comma)+
theme(legend.position = "right") +
theme(panel.background = element_rect(colour = "black")) +
labs(title = "Population of jail in 2018 by County")
pop_2018_1998_df <- filter(AL_Autauga_df , year == 2018 | year == 1998)
selected <- pop_2018_1998_df %>% select(year, aapi_jail_pop, black_jail_pop,
latinx_jail_pop, native_jail_pop,
white_jail_pop)
df <- melt(selected, id.vars="year")
ggplot(df, aes(x=year, y=value, fill=variable))+
geom_bar(position = "dodge", stat = "identity") +
ggtitle("")
pop_2018_1998_df <- filter(AL_Autauga_df , year == 2018 | year == 1998)
selected <- pop_2018_1998_df %>% select(year, aapi_jail_pop, black_jail_pop,
latinx_jail_pop, native_jail_pop,
white_jail_pop)
df <- melt(selected, id.vars="year")
ggplot(df, aes(x=year, y=value, fill=variable))+
geom_bar(position = "dodge", stat = "identity") +
ggtitle("Incarceration rate by race")
View(pop_2018_1998_df)
ggplot(AL_filter_df , aes(x = year,y = total_jail_pop, color = county_name)) +
geom_line() +
ggtitle("Incarceration trends of five county in AL")
pop_2018_1998_df <- filter(AL_Autauga_df , year == 2018 | year == 1998)
selected <- pop_2018_1998_df %>% select(year, aapi_jail_pop, black_jail_pop,
latinx_jail_pop, native_jail_pop,
white_jail_pop)
df <- melt(selected, id.vars="year")
ggplot(df, aes(x=year, y=value, fill=variable))+
geom_bar(position = "dodge", stat = "identity") +
ggtitle("Incarceration rate by race")
incarceration_df <- read.csv("incarceration_trends.csv")
incarceration_2018_df <- filter(incarceration_df, year == 2018)
plot_usmap(data = incarceration_2018_df, values = "total_jail_pop", color = "orange",
labels = FALSE) +
scale_fill_continuous( low = "white", high = "orange",
name = "population", label = scales::comma)+
theme(legend.position = "right") +
theme(panel.background = element_rect(colour = "black")) +
labs(title = "Incarceration rate in 2018 by County")
AL_df <- filter(incarceration_df, state == "AL")
mean_female_jail_pop <- mean(AL_df$female_jail_pop)
mean_male_jail_pop <- mean(AL_df$male_jail_pop)
library(dplyr)
library(ggplot2)
library(usmap)
library(fmsb)
library(reshape2)
#load data
incarceration_df <- read.csv("incarceration_trends.csv")
AL_df <- filter(incarceration_df, state == "AL")
AL_filter_df <- filter(AL_df, county_name == "Autauga County" |
county_name == "Barbour County"|
county_name == "Bibb County" |
county_name == "Blount County" |
county_name == "Bullock County")
AL_Autauga_df <- filter(AL_df, county_name == "Autauga County")
pop_2018_1998_df <- filter(AL_Autauga_df , year == 2018 | year == 1998)
total_pop_Autauga_2018 <- filter(AL_Autauga_df, year == 2018)
total_pop_Autauga_1970 <- filter(AL_Autauga_df, year == 1970)
#summary information
#1.The max total_pop of Autauga County in AL and the year it happened
AL_Autauga_df <- filter(AL_df, county_name == "Autauga County")
max_pop <- max(AL_Autauga_df$total_pop)
max_pop_df <- filter(AL_Autauga_df, AL_Autauga_df$total_pop == max_pop)
max_pop_year <- select(max_pop_df, year, total_pop)
#2.The min total_pop of Autauga County in AL and the year it happened
AL_Autauga_df <- filter(AL_df, county_name == "Autauga County")
min_pop <- min(AL_Autauga_df$total_pop)
min_pop_df <- filter(AL_Autauga_df, AL_Autauga_df$total_pop == min_pop)
min_pop_year <- select(min_pop_df, year, total_pop)
#3. The mean of female_pop and the mean of male_pop in AL
AL_df <- filter(incarceration_df, state == "AL")
mean_female_15to64 <- mean(AL_df$female_pop_15to64)
mean_male_15to64 <- mean(AL_df$male_pop_15to64)
#4.which county in AL has the most total_pop in the year 2018.
AL_2018_df <- filter(AL_df , year == 2018)
max_2018_pop <- max(AL_2018_df$total_pop)
max_2018_pop_df <- filter(AL_2018_df, AL_2018_df$total_pop == max_2018_pop)
max_pop_county <- select(max_2018_pop_df, total_pop, county_name)
#5. The difference between total_pop in 1970 and 2018 of Autauga County in AL.
total_pop_Autauga_2018 <- filter(AL_Autauga_df, year == 2018)
total_pop_Autauga_1970 <- filter(AL_Autauga_df, year == 1970)
difference <- total_pop_Autauga_2018$total_pop - total_pop_Autauga_1970$total_pop
#plot 1
ggplot(AL_filter_df , aes(x = year,y = total_jail_pop, color = county_name)) +
geom_line() +
ggtitle("Incarceration trends of five county in AL")
#plot 2
pop_2018_1998_df <- filter(AL_Autauga_df , year == 2018 | year == 1998)
selected <- pop_2018_1998_df %>% select(year, aapi_jail_pop, black_jail_pop,
latinx_jail_pop, native_jail_pop,
white_jail_pop)
df <- melt(selected, id.vars="year")
ggplot(df, aes(x=year, y=value, fill=variable))+
geom_bar(position = "dodge", stat = "identity") +
ggtitle("Incarceration rate by race")
#map
incarceration_df <- read.csv("incarceration_trends.csv")
incarceration_2018_df <- filter(incarceration_df, year == 2018)
plot_usmap(data = incarceration_2018_df, values = "total_jail_pop", color = "orange",
labels = FALSE) +
scale_fill_continuous( low = "white", high = "orange",
name = "population", label = scales::comma)+
theme(legend.position = "right") +
theme(panel.background = element_rect(colour = "black")) +
labs(title = "Incarceration rate in 2018 by County")
source("analysis.R")
setwd("~/Desktop/a3---data-visualization-and-applications-notvivian")
source("analysis.R")
source("analysis.R")
source("analysis.R")
